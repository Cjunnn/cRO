// RoSF.us R&D Team. 世界服务器 (设置共享/使用超过1服务器) 设置.  由Einstein同步汉化  QQ:99792217 | 安赫尔修正

// 两个版本选项

// 记录世界服务器连接信息, 标准.?
log_inter: 1

// 储存纪录的档案名称
inter_log_filename: log/inter.log

// 组队时经验值分享的等级差距
party_share_level: 15

// SQL版本专用设定

// 您可以指定代码页中的MySQL表在这里使用.
// (注意, 此功能需要 MySQL 4.1+)
//default_codepage: 


// 对于需设置的IP来说, 在Linux系统下面, 建议你使用localhost 而不是127.0.0.1
// 在Windows系统下, 你需要使用 127.0.0.1  如果你遇到了下面的错误提示
// "无法通过Socket连接到本地MySQL服务器 '/tmp/mysql.sock' (2)"
// 你必须使用127.0.0.1, 而不是localhost

// 全局SQL设置 
// 通过本地设置重写时,主机名是指 
// (目前只有登录服务器读取/应用这些设置)
sql.db_hostname: 127.0.0.1
sql.db_port: 3306
sql.db_username: ragnarok
sql.db_password: ragnarok
sql.db_database: ragnarok
sql.codepage:

// MySQL 角色数据服务器
char_server_ip: 127.0.0.1
char_server_port: 3306
char_server_id: ragnarok
char_server_pw: ragnarok
char_server_db: ragnarok

// MySQL 地图数据服务器
map_server_ip: 127.0.0.1
map_server_port: 3306
map_server_id: ragnarok
map_server_pw: ragnarok
map_server_db: ragnarok

// MySQL 日志数据服务器
log_db_ip: 127.0.0.1
log_db_port: 3306
log_db_id: ragnarok
log_db_pw: ragnarok
log_db_db: ragnarok
log_codepage:
log_login_db: loginlog

// == 重新连接设置
// ===========================
// - mysql_reconnect_type
// - 1: 当MySQL在运行期间断开, 服务器会尝试重新连接 mysql_reconnect_count 次,
// -- 如果不成功, 则关闭服务器
// - 2: 当MySQL在运行时断开. 将会无限次尝试重新连接
mysql_reconnect_type:2
// - mysql_reconnect_count
// - 当数据库运行期间断开,服务器应该尝试重新连接的次数
// - 只有当mysql_reconnect_type是用1时
mysql_reconnect_count:1

// 如果你对资料库不了解, 请不要更改以下参数
// 以下参数仅仅为开发人员和对资料库了解并想进行资料库规划
// 的人员准备的 [CLOWNISIUS]

// 所有MySQL数据库表名

//共享数据表
interreg_db: interreg
global_acc_reg_num_db: global_acc_reg_num_db
global_acc_reg_str_db: global_acc_reg_str_db

// 角色数据库表
char_db: char
hotkey_db: hotkey
scdata_db: sc_data
cart_db: cart_inventory
inventory_db: inventory
charlog_db: charlog
storage_db: storage
skill_db: skill
interlog_db: interlog
memo_db: memo
guild_db: guild
guild_alliance_db: guild_alliance
guild_castle_db: guild_castle
guild_expulsion_db: guild_expulsion
guild_member_db: guild_member
guild_skill_db: guild_skill
guild_position_db: guild_position
guild_storage_db: guild_storage
party_db: party
pet_db: pet
friend_db: friends
mail_db: mail
auction_db: auction
quest_db: quest
homunculus_db: homunculus
skill_homunculus_db: skill_homunculus
mercenary_db: mercenary
mercenary_owner_db: mercenary_owner
ragsrvinfo_db: ragsrvinfo
elemental_db: elemental
account_data_db: account_data
acc_reg_num_db: acc_reg_num_db
acc_reg_str_db: acc_reg_str_db
char_reg_str_db: char_reg_str_db
char_reg_num_db: char_reg_num_db

// 地图数据库表
item_db_db: item_db
item_db_re_db: item_db_re
item_db2_db: item_db2
mob_db_db: mob_db
mob_db2_db: mob_db2
mob_skill_db_db: mob_skill_db
mob_skill_db2_db: mob_skill_db2
mapreg_db: mapreg
autotrade_merchants_db: autotrade_merchants
autotrade_data_db: autotrade_data
npc_market_data_db: npc_market_data

// == SQL 物品, 怪物, 怪物技能数据库
// =====================================
// 注意: 以下数据库可能会过时的时候,或者不进行彻底的测试
// (如果是所有,因为它们是自动生成的).因此,您可以不使用它们.
// 我们需要依靠它们来丰富内容界面(控制面板,网站,其它)
//
// 除非你知道你在做什么,请考虑使用txt文本作为数据库.
// 注意: 使用txt数据库是完全正统的做法(推荐)
// RoSF.us研发团队同时可提供装载了SQL表的CP控制面板.
// 那是完全由您独立控制的控制面板.

// 使用 SQL 版本 item_db? (不建议使用)
use_sql_item_db: no

// 使用 SQL 版本 mob_db? (不建议使用)
use_sql_mob_db: no

// 使用 SQL 版本 mob_skill_db? (不建议使用)
use_sql_mob_skill_db: no

import: conf/import/inter_conf.txt
